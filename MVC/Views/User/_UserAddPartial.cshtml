@model IEnumerable<MVC.Models.MVCUserModel>

@{ViewBag.Title = "Items List";
    var createUrl = Url.Action("Create", "User");
    var deleteUrl = Url.Action("Delete", "User");
}

<style>
    .toast {
        background-color: #fff;
        padding: 16px;
        border: 1px solid #ccc;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        z-index: 9999;
        border-radius: 5px;
    }

    .toast-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .toast-body {
        margin-top: 10px;
    }

    /* General Table Styling */
    .table-responsive {
        max-height: 300px;
        overflow-y: auto;
        display: block;
    }
    .table {
        width: 100%;
        border-collapse: collapse;
        border: 1px solid #eee;
    }

    .table th, .table td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    /* Header Styling */
    .table th {
        background-color: #4CAF50;
        color: white;
    }

    /* Row Hover Effect */
    .table tr:hover {
        background-color: #f5f5f5;
    }
    .table thead {
        display: table;
        width: 100%;
        table-layout: fixed;
    }

    .table tbody {
        display: block; 
        width: 100%; 
        overflow: auto; 
    }
    .table tbody tr {
        display: table;
        table-layout: fixed; 
        width: 100%; 
    }

    .table th, .table td {
        padding: 12px 15px; /* Padding for table cells */
        text-align: left; /* Align text to the left */
        border-bottom: 1px solid #ddd; /* Add bottom border */
    }

    /* Display Text Style */
    .display-name, .display-description {
        font-weight: 600;
    }

    /* Input Fields */
    .edit-name, .edit-description {
        width: 100%;
    }

    /* Button Styling */
    .btn {
        padding: 8px 12px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        transition: background-color 0.3s, color 0.3s;
    }

    .edit-link {
        color: #007bff;
    }

    .delete-link {
        color: #dc3545;
    }

    /* Save Button */
    .save-link {
        background-color: #28a745; /* Green */
        color: white;
        margin-left: 15px;
    }

    /* Cancel Button */
    .cancel-link {
        background-color: #dc3545; /* Red */
        color: white;
    }

    /* Button Hover Effects */
    .edit-link:hover, .delete-link:hover,
    .save-link:hover, .cancel-link:hover {
        opacity: 0.8;
    }
</style>

@*table*@
<div class="table-responsive">
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Description)</th>
            <th>Actions</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr id="row-@item.UserID">
                <td>
                    <span class="display-name">@Html.DisplayFor(modelItem => item.Name)</span>
                    <input type="text" class="edit-name form-control" style="display:none;" value="@item.Name" />
                </td>
                <td>
                    <span class="display-description">@Html.DisplayFor(modelItem => item.Description)</span>
                    <input type="text" class="edit-description form-control" style="display:none;" value="@item.Description" />
                </td>
                <td>
                    <!-- Edit Button -->
                    <a href="javascript:void(0);" class="edit-link" onclick="enableEditMode(@item.UserID)">Edit</a> |
                    <!-- Delete Button -->
                    <a href="javascript:void(0);" class="delete-link" onclick="showDeleteToast(@item.UserID)">Delete</a>

                    <!-- Save and Cancel Buttons (hidden by default) -->
                    <button type="button" class="save-link btn btn-success" style="display:none;" onclick="saveProduct(@item.UserID)">Save</button>
                    <button type="button" class="cancel-link btn btn-danger" style="display:none;" onclick="cancelEdit(@item.UserID)">Cancel</button>
                </td>
            </tr>
        }
    </table>
</div>

    <!-- Toast Notification for Delete Confirmation -->
    <div id="deleteToast" class="toast" style="position: absolute; top: 51px; right: 41%; display: none;">
        <div class="toast-header">
            <strong class="mr-auto">Delete Confirmation</strong>
            <button type="button" class="ml-2 mb-1 close" onclick="hideToast()">&times;</button>
        </div>
        <div class="toast-body">
            <h5>Are you sure you want to delete this item?</h5>
            <div style="text-align: center; margin-top: 15px;">
                <button id="confirmDeleteBtn" class="btn btn-danger btn-sm">Yes, Delete</button>
                <button class="btn btn-secondary btn-sm" onclick="hideToast()">Cancel</button>
            </div>
        </div>
    </div>

    @*jquery CDN*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
    // Enable edit mode
       function enableEditMode(id)
       {
        var row = $('#row-' + id);
        row.find('.display-name, .display-description').hide();
        row.find('.edit-name, .edit-description').show();
        row.find('.edit-link').hide();
        row.find('.save-link, .cancel-link').show();
       }

    // Cancel edit mode and restore original values
    function cancelEdit(id) {
        var row = $('#row-' + id);
        row.find('.edit-name, .edit-description').hide();
        row.find('.display-name, .display-description').show();
        row.find('.save-link, .cancel-link').hide();
        row.find('.edit-link').show();
    }

    // Save the edited product details
    function saveProduct(id) {
        var row = $('#row-' + id);
        var updatedName = row.find('.edit-name').val();
        var updatedDescription = row.find('.edit-description').val();

        // Validate input
        if (!updatedName || !updatedDescription) {
            alert("Please enter valid data.");
            return;
        }

        // Create data object
        var updatedData = {
            UserID: id,
            Name: updatedName,
            Description: updatedDescription
        };

        // Send AJAX request to update data
        $.ajax({
            url: '@createUrl',
            type: 'POST',
            data: JSON.stringify(updatedData),
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                if (result.success) {
                    // Append the new item to the list
                    $('#itemsList').html(result.html);
                    // Clear the form
                    $('#addItemForm')[0].reset();
                } else {
                    // Display validation errors
                    if (result.errors.Name) {
                        $('#nameError').text(result.errors.Name);
                    }
                    if (result.errors.Description) {
                        $('#descriptionError').text(result.errors.Description);
                    }
                }
            },
            error: function () {
                alert('An error occurred while adding the item.');
            }
        });
    }


    // delete function
    // Function to show the toast with delete confirmation
    function showDeleteToast(itemId) {
        // Show the toast
        $('#deleteToast').fadeIn();

        // Assign the delete function to the button
        $('#confirmDeleteBtn').off('click').on('click', function () {
            deleteItem(itemId);
            hideToast();
        });
    }

    // Function to hide the toast
    function hideToast() {
        $('#deleteToast').fadeOut();
    }

    toastr.options = {
        "positionClass": "toast-top-center",
        "closeButton": true,
        "timeOut": "3000",
        "extendedTimeOut": "1000",
    };
    function deleteItem(id) {
        $.ajax({
            url: '/User/Delete/' + id,
            type: 'POST',
            data: { id: id },
            success: function (result) {
                if (result.success) {
                    // Update the user list with the returned HTML
                    $('#itemsList').html(result.html);
                    toastr.success('User deleted successfully!', 'Success');
                } else {
                    alert(result.message);
                }
            },
            error: function () {
                toastr.error('An error occurred while deleting the user.', 'Error');
            }
        });
    }
    </script>
